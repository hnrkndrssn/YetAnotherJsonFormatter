name: Continuous Integration

on:
  pull_request:
    branches: 
      - '*'
  push:
    branches: 
      - master
env:
  PUBLISH_PATH: '../../publish'
  ARTIFACT_PATH: './publish'
  NODE_VERSION: '12.x'
  DOTNET_VERSION: '3.1.100'
  CI: true

jobs:

  git-version:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --unshallow

      - name: Calculate version
        uses: docker://gittools/gitversion:latest-linux
        with:
          args: /github/workspace /nofetch /exec /bin/sh /execargs "-c \"echo $GitVersion_FullSemVer > /github/workspace/version.txt\""

      - name: persist version file
        uses: actions/upload-artifact@v1
        with:
          name: gitversion
          path: '/github/workspace/version.txt'

  build-web-app:
    runs-on: ubuntu-latest

    needs: git-version

    steps:
      - uses: actions/checkout@v2

      - name: Get gitversion artifact
        uses: actions/download-artifact@v1
        with:
          name: gitversion

      - run: echo "::set-env name=GITVERSION_FULLSEMVER::$(cat gitversion)"

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: npm install, lint and build
        run: |
          npm install
          npm run lint
          npm run build -- --dest '${{ env.PUBLISH_PATH }}/app'
          npm run test --if-present
        working-directory: ./src/yet-another-online-jsonviewer-app

      - name: persist web app artifact
        uses: actions/upload-artifact@v1
        with:
          name: 'web-app.${{ env.GITVERSION_FULLSEMVER }}'
          path: '${{ env.ARTIFACT_PATH }}/app'

  build-web-api:
    runs-on: ubuntu-latest

    needs: git-version

    steps:
      - uses: actions/checkout@v2

      - name: Get gitversion artifact
        uses: actions/download-artifact@v1
        with:
          name: gitversion

      - run: echo "::set-env name=GITVERSION_FULLSEMVER::$(cat gitversion)"

      - name: setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: dotnet build and publish
        run: |
          dotnet build --configuration Release
          dotnet publish -o '${{ env.PUBLISH_PATH }}/api'
        working-directory: ./src/YetAnotherJsonFormatter

      - name: presist web api artifact
        uses: actions/upload-artifact@v1
        with:
          name: 'web-api.${{ env.GITVERSION_FULLSEMVER }}'
          path: '${{ env.ARTIFACT_PATH }}/api'
        